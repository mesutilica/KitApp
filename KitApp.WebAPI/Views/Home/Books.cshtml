@model IEnumerable<KitApp.Core.Entities.Book>

@{
    ViewData["Title"] = "Kitaplar";
    Layout = "_PaneLayout";
}

<h1>Kitaplar</h1>

<hr />
<table id="books" class="table table-striped table-hover"></table>
<div class="text-center" style="display:none;" id="ajax-loader">
    <div class="spinner-border" role="status">
        <span class="visually-hidden">Loading...</span>
    </div>
</div>
<div id="error"></div>
<div id="sonuc" class="alert alert-success" style="display:none;"></div>

@section Scripts {
    <script>
        
        LoadBooks();
        
        function RefreshToken(refToken) {
            $.ajax({
                method: "GET",
                url: "/api/User/refreshToken?token=" + refToken,
                dataType: "json",
                success: function (data) {
                    //console.log(data);
                    if (data == null) {
                        $("#error").html("Giriş Başarısız!");
                        return;
                    }
                    else {
                        sessionStorage.setItem("accessToken", data.accessToken);
                        sessionStorage.setItem("refreshToken", data.refreshToken);
                    }
                }
            }).done(function (response) {
                //console.log(response);
            }).fail(function () {
                console.log("Hata oluştu.");
            });
        }
        function LoadBooks() {

            var ul = $("#books");
            ul.empty();

            $.ajax({
                method: "GET",
                url: "/Api/Books",
                dataType: "json",
                //headers: { Authorization: "Basic " + btoa(name + ":" + pass) },
                headers: { Authorization: "Bearer " + sessionStorage.getItem("accessToken") },
                beforeSend: function (xhr) {
                    //xhr.setRequestHeader('Authorization', "Bearer " + sessionStorage.getItem("accessToken"));
                    console.log(xhr);
                    $("#ajax-loader").show();
                },
                success: function (data) {
                    
                   // console.log(data);
                    for (var i = 0; i < data.length; i++) {
                        var book = data[i];
                        //console.log(book.authorName);
                        var li = $("<tr><td><span>Id :" + book.id + " - Kitap Adı : " + book.name + " - Yazarı : " + book.authorName + " - Yayınevi : " + book.publisherName + " - Kalan Miktarı : " + book.amount + "</span></td><td> <button id='btnGetData " + book.id + "' data-id='" + book.id + "'  onclick='ReserveBook(" + book.id + ")' type='button' class='btn btn-info'>Rezerve Et</button><td></tr>")

                        ul.append(li);
                    }
                },
                error: function (err) {
                    console.log("Hata oluştu " + err.status + " " + err.statusText);
                    if (err.status == 401) window.location.href = "/Login";
                },
                complete: function () {
                    $("#ajax-loader").hide();
                    //RefreshToken(sessionStorage.getItem("refreshToken"));
                }
            }).done(function (response, statusText, jqXHR) {
                //console.log(jqXHR);
                
                //console.log(response);

                if (response == null)
                    return;

            }).fail(function (err) {
                //alert("Hata oluştu " + err.status + " " + err.statusText);
                if (err.status == 401) window.location.href = "/Login";
            });
        }
        function ReserveBook(id) {

            var refreshToken = sessionStorage.getItem("refreshToken");
            var veri = {
                "RefreshToken": refreshToken,
                "Id": id
            };

            $.ajax({
                method: "POST",
                url: "/api/AppUsers/PostBookAdd",
                dataType: "json",
                headers: { Authorization: "Bearer " + sessionStorage.getItem("accessToken") },
                contentType: 'application/json',
                data: JSON.stringify(veri),
                beforeSend: function () {
                    //console.log(veri);
                    //$("#ajax-loader").show();
                },
                complete: function (data) {
                    //console.log("complete : " + data);
                    //$("#ajax-loader").hide();
                },
                success: function (data) {
                    //console.log("success : " + data);
                    if (data == null) {
                        $("#error").html("İşlem Başarısız!");
                       // return;
                    }
                    else {
                        $("#sonuc").show().html(" Kitaplığınıza Eklendi!").delay("slow").fadeOut();
                    }
                },
                error: function (err) {
                    if (err.status == 417) $("#error").html("İşlem Başarısız! Maksimum 3 Kitap Rezervasyonu Yapabilirsiniz!");
                    console.log("Hata oluştu " + err.status + " " + err.statusText);
                },
            }).done(function (response, statusText, jqXHR) {
                //console.log(response);
                //if (response == null) return;
                if (jqXHR.status == 201) {
                    LoadBooks();
                }
                if (jqXHR.status == 304) $("#error").html("İşlem Başarısız! Kitap Rezervasyonu İçin Stok Yetersiz!");
                
                //console.log("status : " + jqXHR.status);
                //console.log("statusText : " + jqXHR.statusText);
                //console.log("location : " + jqXHR.getResponseHeader("location"));
            }).fail(function (err) {
               // console.log("err : " + err);
                if (err.status == 409) alert("Bu kitap zaten kütüphanenizde kayıtlı!");
                //else alert("Hata oluştu " + err.status + " " + err.statusText);
            });

        }
    </script>
}




@*<table class="table">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Name)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.AuthorName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.PublisherName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Amount)
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.AuthorName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.PublisherName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Amount)
                    </td>
                    <td>
                        <a asp-action="Reserve" asp-route-id="@item.Id">Rezerve Et</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>*@
